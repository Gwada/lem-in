==75745== Memcheck, a memory error detector
==75745== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75745== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==75745== Command: ./lem_in
==75745== Parent PID: 75116
==75745== 
==75745== Syscall param msg->desc.port.name points to uninitialised byte(s)
==75745==    at 0x1003B234A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==75745==    by 0x1003B1796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==75745==    by 0x1003AB485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==75745==    by 0x10054710E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==75745==    by 0x100547458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==75745==    by 0x1000B09DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==75745==    by 0x100020A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==75745==    by 0x100020C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==75745==    by 0x10001C4A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==75745==    by 0x10001C440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==75745==    by 0x10001B523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==75745==    by 0x10001B5B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==75745==  Address 0x104893d4c is on thread 1's stack
==75745==  in frame #2, created by task_set_special_port (???:)
==75745== 
==75745== Invalid read of size 4
==75745==    at 0x10000418C: get_next_line (in ./lem_in)
==75745==    by 0x100001313: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==  Address 0x100b64d4c is 12 bytes inside a block of size 168 free'd
==75745==    at 0x1000A1E2B: free (in /Users/dlavaury/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==75745==    by 0x1000044E6: ft_del_one (in ./lem_in)
==75745==    by 0x100004168: get_next_line (in ./lem_in)
==75745==    by 0x100001313: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==    by 0x100001466: get_arg (in ./lem_in)
==75745==  Block was alloc'd at
==75745==    at 0x1000A1A46: malloc (in /Users/dlavaury/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==75745==    by 0x10000468D: ft_create_one (in ./lem_in)
==75745==    by 0x1000041F5: ft_find (in ./lem_in)
==75745==    by 0x100004022: get_next_line (in ./lem_in)
==75745==    by 0x100001313: get_arg (in ./lem_in)
==75745==    by 0x100001239: main (in ./lem_in)
==75745== 
==75745== Invalid write of size 8
==75745==    at 0x100003A95: ft_strsplit (in ./lem_in)
==75745==    by 0x1000020D4: is_node (in ./lem_in)
==75745==    by 0x10000191F: node_parser (in ./lem_in)
==75745==    by 0x1000014D4: parser (in ./lem_in)
==75745==    by 0x10000124B: main (in ./lem_in)
==75745==  Address 0x100b66840 is 16 bytes inside a block of size 17 alloc'd
==75745==    at 0x1000A1A46: malloc (in /Users/dlavaury/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==75745==    by 0x100003A71: ft_strsplit (in ./lem_in)
==75745==    by 0x1000020D4: is_node (in ./lem_in)
==75745==    by 0x10000191F: node_parser (in ./lem_in)
==75745==    by 0x1000014D4: parser (in ./lem_in)
==75745==    by 0x10000124B: main (in ./lem_in)
==75745== 
==75745== Use of uninitialised value of size 8
==75745==    at 0x10000212B: is_node (in ./lem_in)
==75745==    by 0x10000191F: node_parser (in ./lem_in)
==75745==    by 0x1000014D4: parser (in ./lem_in)
==75745==    by 0x10000124B: main (in ./lem_in)
==75745== 
==75745== Invalid read of size 1
==75745==    at 0x10000212B: is_node (in ./lem_in)
==75745==    by 0x10000191F: node_parser (in ./lem_in)
==75745==    by 0x1000014D4: parser (in ./lem_in)
==75745==    by 0x10000124B: main (in ./lem_in)
==75745==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==75745== 
==75745== 
==75745== Process terminating with default action of signal 11 (SIGSEGV)
==75745==  Access not within mapped region at address 0x0
==75745==    at 0x10000212B: is_node (in ./lem_in)
==75745==    by 0x10000191F: node_parser (in ./lem_in)
==75745==    by 0x1000014D4: parser (in ./lem_in)
==75745==    by 0x10000124B: main (in ./lem_in)
==75745==  If you believe this happened as a result of a stack
==75745==  overflow in your program's main thread (unlikely but
==75745==  possible), you can try to increase the size of the
==75745==  main thread stack using the --main-stacksize= flag.
==75745==  The main thread stack size used in this run was 8388608.
==75745== 
==75745== HEAP SUMMARY:
==75745==     in use at exit: 18,946 bytes in 215 blocks
==75745==   total heap usage: 261 allocs, 46 frees, 25,337 bytes allocated
==75745== 
==75745== LEAK SUMMARY:
==75745==    definitely lost: 0 bytes in 0 blocks
==75745==    indirectly lost: 2,064 bytes in 1 blocks
==75745==      possibly lost: 0 bytes in 0 blocks
==75745==    still reachable: 969 bytes in 59 blocks
==75745==         suppressed: 15,913 bytes in 155 blocks
==75745== Reachable blocks (those to which a pointer was found) are not shown.
==75745== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==75745== 
==75745== For counts of detected and suppressed errors, rerun with: -v
==75745== Use --track-origins=yes to see where uninitialised values come from
==75745== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 13 from 13)
